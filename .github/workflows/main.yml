name: Terrafrom CI
on:
  workflow_dispatch:
  
jobs:
  terraform:
    runs-on: self-hosted
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    environment: developers
    steps:
    - uses: actions/checkout@v3.0.0
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: Terraform

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: Terraform

    - name: Terraform Plan
      id: plan
      run: terraform plan
      continue-on-error: true
      working-directory: Terraform
      
    - name: add-plan-comment
      id: comment
      uses: actions/github-script@v3
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
        
    - name: Terraform Apply
      id: apply
      run: terraform apply --auto-approve
      working-directory: Terraform
    
    - name: Ckecking inventory file
      run: cat Ansible/inventory
      
  deployAnsible:
    runs-on: self-hosted
    needs: [terraform]
    steps:
      - uses: actions/checkout@v3.0.0
      - name: Run Ansible playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
           playbook: playbook.yml
           directory: Ansible
           key: ${{ secrets.PRIVATE_KEY }}
        # known_hosts: ${{ secrets.PUBLIC_KEY }}      
        
  ansibleLint:
    runs-on: self-hosted
    needs: [terraform]
    steps:
      - uses: actions/checkout@v3.0.0
      - name: Run ansible-lint
        uses: ansible-community/ansible-lint-action@v6.0.2
        with:
          args: "Ansible"
